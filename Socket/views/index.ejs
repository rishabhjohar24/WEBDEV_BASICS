<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>RealTime</title>
  <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
</head>

<body>
  <div class="bg-white overflow-hidden overflow-hidden shadow rounded-lg px-4 py-4 sm:px-6 w-4/5 mx-auto mt-8">
    <h2 class="text-2xl leading-8 font-extrabold text-gray-900 sm:text-3xl sm:leading-9">
      Chat
    </h2>

    <div class="px-4 py-5 sm:p-6" id="message-box">
      <!-- Content goes here -->
    </div>

    <div class="border-t border-gray-200 px-4 py-4 sm:px-6">
      <form id="form" action="#" method="POST" class="grid grid-cols-1 row-gap-6">
        <span class="feedback" id="feedback"></span>
        <div>
          <div class="mt-1 relative rounded-md shadow-sm">
            <input autoComplete="off" id="input" placeholder="Start typing..."
              class="form-input py-3 px-4 block w-full transition ease-in-out duration-150">
          </div>
        </div>
        <button type="submit"
          class="w-full inline-flex items-center justify-center px-6 py-3 border border-transparent text-base leading-6 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150">
          Send message
        </button>
      </form>
    </div>

    <div class="border-t border-gray-200 px-4 py-4 sm:px-6">
      <h3 class="px-4 py-4">Who's online:</h3>
      <ul id="peer-list"
        class="px-6 py-3 max-w-0 w-full whitespace-no-wrap text-sm leading-5 font-medium text-gray-900">
        <!-- Content goes here -->
      </ul>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      let myName = '';
      let form = document.getElementById('form');
      let input = document.getElementById('input');
      let msgBox = document.getElementById('message-box');
      let peerList = document.getElementById('peer-list');
      let feedback = document.getElementById('feedback');
      let socket = io();
      function submitHandler(evt) {
        evt.preventDefault();
        socket.emit('message', input.value);
        socket.emit('stopped');
        input.value = ''
        msgBox.focus();
      }
      input.onkeyup = (event) => {
        if(event.target.value !== '') {
          socket.emit('user-typing');
        }
      }
      socket.on('user-typing', ({peer, len}) => {
        feedback.innerHTML = len > 1 ? 'Several people are typing' : `<i>${peer}</i> is typing`;
      });
      socket.on('stopped', typers => {
        if (!typers) {
          feedback.innerHTML = '';
        }
      });
      form.addEventListener('submit', submitHandler)
      socket.on('name-generated', (name) => {
        myName = name;
      });

      socket.on('update-peers', ({peers, id}) => {
        peerList.innerHTML = ''
        // const peers = values;
        const template = `<li class=“flex items-center space-x-3 lg:pl-2”>
          <div class=“flex-shrink-0 w-2 h-2 rounded-full bg-%PEER_COLOR%-600”></div>
            <a href="/user/%ID%"><span>%PEER_NAME%</span> </a>
        </li>`
        let i = 0;
        for (const peer of peers) {

          //let peers = peer
          if (peers[i] === myName) {
            peers[i] += ' (you)'
          }
          peerList.innerHTML += template.replace('%PEER_NAME%', peers[i]).replace("%ID%", id[i]).replace('%PEER_COLOR%', peer.split('-')[0])
          i++;
        }
      });

      socket.on('newMessage', ({ sender, message }) => {
        let name = document.createElement('strong');
        name.textContent = `${sender} says: `

        let msgEl = document.createElement('span');
        msgEl.textContent = message

        let paragraph = document.createElement('p');
        paragraph.appendChild(name);
        paragraph.appendChild(msgEl);

        msgBox.appendChild(paragraph);
        console.log(message);
      });
    </script>
  </div>
</body>
</html>